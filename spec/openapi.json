{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "Maia Score",
    "description": "",
    "termsOfService": "https://maiascore.com",
    "contact": {
      "name": "Engineering Team",
      "email": "engineering@ysnx.ai",
      "url": "https://synx.ai"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-generation-date": "02/26/2021 9:31:01 PM"
  },
  "x-hasEquivalentPaths": true,
  "servers": [
    {
      "url": "https://maiascore.com",
      "description": "Development server"
    },
    {
      "url": "https://maiascore.com",
      "description": "Staging server"
    },
    {
      "url": "https://maiascore.com",
      "description": "Production server"
    }
  ],
  "externalDocs": {
    "description": "Find out more",
    "url": "https://maias-score.github.io/documentation"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/company": {
      "get": {
        "deprecated": false,
        "description": "Returns current Maia customer company information.",
        "operationId": "getCompany",
        "responses": {
          "200": {
            "description": "Retrieve company document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retreive company information",
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Updates current company information.",
        "operationId": "updateCompany",
        "responses": {
          "200": {
            "description": "Retrieve company document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Update company information",
        "tags": [
          "Company"
        ],
        "requestBody": {
          "description": "The fields to update company information, non presents fields are ignored.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCompany"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewCompany"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewCompany"
              }
            }
          }
        },
        "parameters": []
      }
    },
    "/customers": {
      "get": {
        "deprecated": false,
        "description": "This method requests and filters all customers records registered in database.",
        "operationId": "getCustomers",
        "responses": {
          "200": {
            "description": "Retrieve customers document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customers"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find all the customer records",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "This method is used to register a new customer into database. These information will be used for AI agent trainig.",
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "Retrieve customers document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customers"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Create a new customers record.",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "description": "While not every fields are required, is strongly recommended to fill out as many as possbile.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCustomers"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewCustomers"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewCustomers"
              }
            }
          }
        }
      }
    },
    "/customers/count": {
      "get": {
        "deprecated": false,
        "description": "Perform an optmized _count_ of records, usually for pagination purposes.",
        "operationId": "countCustomers",
        "responses": {
          "200": {
            "description": "Retrieve customers document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retrieve the numver of customers documents",
        "tags": [
          "Customers"
        ],
        "parameters": []
      }
    },
    "/customers/{id}": {
      "get": {
        "deprecated": false,
        "description": "Find one customers record using Id or Reference.",
        "operationId": "getCustomer",
        "responses": {
          "200": {
            "description": "Retrieve customers document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customers"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find one customers record",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "This methods updates the information for a single customer.",
        "operationId": "updateCustomer",
        "responses": {
          "200": {
            "description": "Retrieve customers document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customers"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Update a single customers record.",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "description": "Fields to update the customer.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCustomers"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewCustomers"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewCustomers"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a single customers record",
        "operationId": "deleteCustomer",
        "responses": {
          "200": {
            "description": "deletes a single customers based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Delete a single customers record",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/datasources": {
      "get": {
        "deprecated": false,
        "description": "Used to fetch information about all the datasource records where customers and their payments historial is stored.",
        "operationId": "getDatasources",
        "responses": {
          "200": {
            "description": "Retrieve datasources document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Datasources"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find all the datasource records",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates, test and connects a new data source based on the secutiry scheme selected.",
        "operationId": "createDatasource",
        "responses": {
          "200": {
            "description": "Retrieve datasources document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Datasources"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Create a new datasources record",
        "tags": [
          "Datasources"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDatasources"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewDatasources"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewDatasources"
              }
            }
          }
        }
      }
    },
    "/datasources/count": {
      "get": {
        "deprecated": false,
        "description": "Get the number of current data sources.",
        "operationId": "countDatasources",
        "responses": {
          "200": {
            "description": "Retrieve datasources document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retrieve the number of datasources documents",
        "tags": [
          "Datasources"
        ],
        "parameters": []
      }
    },
    "/datasources/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve information about the selected data source based on the `Id`",
        "operationId": "getDatasource",
        "responses": {
          "200": {
            "description": "Retrieve datasources document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Datasources"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requires authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find one datasources record",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Datasource Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update and test a new connection to a data source.",
        "operationId": "updateDatasource",
        "responses": {
          "200": {
            "description": "Retrieve datasources document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Datasources"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Fields to uptade a data source",
        "tags": [
          "Datasources"
        ],
        "requestBody": {
          "description": "Update a single datasources record",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDatasources"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewDatasources"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewDatasources"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Datasource Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Removes the connection with a data source and erases login information. Please note that a reference of the data source will remain to ensure consistence about data origin on customer and payment records, but data source cannot be longer used or accessed.",
        "operationId": "deleteDatasource",
        "responses": {
          "200": {
            "description": "deletes a single datasources based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Delete a single datasources record",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Datasource Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "deprecated": false,
        "description": "Retrieves and filter a list of payment records.",
        "operationId": "getPayments",
        "responses": {
          "200": {
            "description": "Retrieve payments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payments"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find all the payment records",
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Register a new payment to a customer historial.",
        "operationId": "createPayment",
        "responses": {
          "200": {
            "description": "Retrieve payments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payments"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Create a new payments record",
        "tags": [
          "Payments"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPayments"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewPayments"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewPayments"
              }
            }
          }
        }
      }
    },
    "/payments/count": {
      "get": {
        "deprecated": false,
        "description": "Count payments across all users and data sources.",
        "operationId": "countPayments",
        "responses": {
          "200": {
            "description": "Retrieve payments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retrieve the number of payments records",
        "tags": [
          "Payments"
        ],
        "parameters": []
      }
    },
    "/payments/{id}": {
      "get": {
        "deprecated": false,
        "description": "Gets a payment event from its `Id`",
        "operationId": "getPayment",
        "responses": {
          "200": {
            "description": "Retrieve payments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payments"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find one payments record",
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Updates a payment event.",
        "operationId": "updatePayment",
        "responses": {
          "200": {
            "description": "Retrieve payments document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payments"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Update a single payments record",
        "tags": [
          "Payments"
        ],
        "requestBody": {
          "description": "The fields to update the record.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPayments"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewPayments"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewPayments"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Removes a payment record for local records.",
        "operationId": "deletePayment",
        "responses": {
          "200": {
            "description": "deletes a single payments based on the ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Delete a single payments record",
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/reports": {
      "get": {
        "deprecated": false,
        "description": "Retrieves and filters a list of score reports.",
        "operationId": "getReports",
        "responses": {
          "200": {
            "description": "Retrieve reports document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reports"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find all the score reports",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create and process a new score repors.",
        "operationId": "createReport",
        "responses": {
          "200": {
            "description": "Retrieve reports document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reports"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Create a new score report",
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "description": "The fields to generete a score report. While most parameters are optional, is strongly recommended to fill out as many as possible.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReports"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewReports"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewReports"
              }
            }
          }
        }
      }
    },
    "/reports/count": {
      "get": {
        "deprecated": false,
        "description": "Get report count across all users.",
        "operationId": "countReports",
        "responses": {
          "200": {
            "description": "Retrieve reports document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retrieve the number of score reports",
        "tags": [
          "Reports"
        ],
        "parameters": []
      }
    },
    "/reports/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get one score report based on its `Id`",
        "operationId": "getReport",
        "responses": {
          "200": {
            "description": "Retrieve reports document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reports"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find one score report",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
    },
    "/trainings": {
      "get": {
        "deprecated": false,
        "description": "Retrieve information about AI agent training history and its performance score.",
        "operationId": "getTrainings",
        "responses": {
          "200": {
            "description": "Retrieve trainings document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trainings"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find all the training records",
        "tags": [
          "Trainings"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Manually lanch or schedule a training task. Please note that training will be queued and run asynchronously.",
        "operationId": "createTraining",
        "responses": {
          "200": {
            "description": "Retrieve trainings document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trainings"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Create a new training",
        "tags": [
          "Trainings"
        ],
        "requestBody": {
          "description": "The trigger parameter of new training.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTrainings"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewTrainings"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewTrainings"
              }
            },
          }
        }
      }
    },
    "/trainings/count": {
      "get": {
        "deprecated": false,
        "description": "Gets the counts of all agent trainings.",
        "operationId": "countTrainings",
        "responses": {
          "200": {
            "description": "Retrieve trainings document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retrieve the nubver of trainings",
        "tags": [
          "Trainings"
        ],
        "parameters": []
      }
    },
    "/trainings/{id}": {
      "get": {
        "deprecated": false,
        "description": "Gets the information about an specific training and its performance metrics.",
        "operationId": "getTraining",
        "responses": {
          "200": {
            "description": "Retrieve trainings document(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trainings"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Find one training",
        "tags": [
          "Trainings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Training Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
    },
    "/trainings/cancel/{id}": {
      "post": {
        "deprecated": false,
        "description": "Cancels a queued training.",
        "operationId": "cancelTraining",
        "responses": {
          "200": {
            "description": "Canceled successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trainings"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Cancel queued training",
        "tags": [
          "Trainings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Training",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
    },
    "/email": {
      "post": {
        "x-docgenIgnore": true,
        "deprecated": false,
        "description": "Endpoint to send emails to internal users.",
        "operationId": "sendEmail",
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "example" : {
                  "code": 200,
                  "message": "Email sent successfully"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Send an email",
        "tags": [
          "Email - Email"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id, username or email for the receiver",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "deprecated": false,
        "description": "This is a multipurpose endpoin to upload a file to the logged user.",
        "operationId": "uploadFile",
        "responses": {
          "200": {
            "description": "Upload successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Upload a file",
        "tags": [
          "Upload - File"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "binaryUrl": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload/files/count": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the total number of uploaded files across all users.",
        "operationId": "filesCount",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "example" : {
                  "code": 200,
                  "message": "OK"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retrieve number of uploaded files",
        "tags": [
          "Upload - File"
        ],
        "parameters": []
      }
    },
    "/upload/files": {
      "get": {
        "deprecated": false,
        "description": "Get a list of files belonging to logged account.",
        "operationId": "getFiles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "binaryUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retreive all file documents",
        "tags": [
          "Upload - File"
        ],
        "parameters": []
      }
    },
    "/upload/files/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a single file by its `Id`",
        "operationId": "getFile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "binaryUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Get one file",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete an uploaded file",
        "operationId": "deleteFile",
        "responses": {
          "200": {
            "description": "Deleted successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/upload/search/{query}": {
      "get": {
        "deprecated": false,
        "description": "Performs a search for an uploaded file by its file name.",
        "operationId": "findFile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "binaryUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Search for an uploaded file",
        "tags": [
          "Upload - File"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "Search query",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/roles/{id}": {
      "get": {
        "x-docgenIgnore": true,
        "deprecated": false,
        "description": "Retrieve a role depending on its `Id`",
        "operationId": "getUserPermission",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/roles": {
      "get": {
        "x-docgenIgnore": true,
        "deprecated": false,
        "description": "Retrieve all role documents",
        "operationId": "getUserPermissionRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsRole"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      },
      "post": {
        "x-docgenIgnore": true,
        "deprecated": false,
        "description": "Create a new role",
        "operationId": "createUserPermissionsRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsRole"
              }
            }
          }
        }
      }
    },
    "/users-permissions/roles/{role}": {
      "x-docgenIgnore": true,
      "put": {
        "deprecated": false,
        "description": "Update a role",
        "operationId": "createUserPermissionRole",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsRole"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "Role Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsRole"
              }
            }
          }
        }
      },
      "delete": {
        "x-docgenIgnore": true,
        "deprecated": false,
        "description": "Delete a role",
        "operationId": "deleteUserPermissionRole",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "Role Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users-permissions/search/{id}": {
      "get": {
        "x-docgenIgnore": true,
        "deprecated": false,
        "description": "Search for users",
        "operationId": "findUserPermission",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      }
    },
    "/connect/*": {
      "get": {
        "deprecated": false,
        "description": "Connect a login or authentication provider.",
        "operationId": "connectProvider",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/auth/local": {
      "post": {
        "deprecated": false,
        "description": "Login a user using the identifiers email and password.",
        "operationId": "localAuth",
        "responses": {
          "200": {
            "description": "Auth suxcessful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "User Login",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "User login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "user": {
                    "type": "string",
                    "example": "jlopez"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "********"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "user": {
                    "type": "string",
                    "example": "jlopez"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "********"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "user": {
                    "type": "string",
                    "example": "jlopez"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "********"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/local/register": {
      "post": {
        "deprecated": false,
        "description": "Register a new user with the default role.",
        "operationId": "registerAuth",
        "responses": {
          "200": {
            "description": "Register Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "User Registrarion",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "User fields",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            },
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "deprecated": false,
        "description": "Successful redirection after approving a provider",
        "operationId": "providerCallback",
        "responses": {
          "200": {
            "description": "Calback successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Auth provider callback",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "User Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "deprecated": false,
        "description": "Sends the reset password email link.",
        "operationId": "forgotPassword",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Password reset",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id, username or email",
                    "type": "string"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id, username or email",
                    "type": "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id, username or email",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password/{resetToken}": {
      "post": {
        "deprecated": false,
        "description": "Reset user password with a code (resetToken)",
        "operationId": "resetPassword",
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Reset password",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "resetToken",
            "in": "path",
            "description": "Token for password reset",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/auth/email-confirmation": {
      "get": {
        "deprecated": false,
        "description": "Validate a user account",
        "operationId": "emailConfirmation",
        "responses": {
          "200": {
            "description": "Confirmation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/auth/send-email-confirmation": {
      "post": {
        "deprecated": false,
        "description": "If not confirmed, sends a confirmation email to an user as part of verification process.",
        "operationId": "sendEmailConfirmation",
        "responses": {
          "200": {
            "description": "Email sent successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "example" : {
                  "code": 200,
                  "message": "Email sent successfuly"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Send confirmation email",
        "tags": [
          "UsersPermissions - User"
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id, username or email for the receiver",
                    "type": "string"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id, username or email for the receiver",
                    "type": "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id, username or email for the receiver",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "deprecated": false,
        "description": "Get a list of registered users.",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersPermissionsUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Retrieve all users",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of results possible",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "_sort",
            "in": "query",
            "required": false,
            "description": "Sort according to a specific field.",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_start",
            "in": "query",
            "required": false,
            "description": "Skip a specific number of entries (especially useful for pagination)",
            "schema": {
              "type": "integer"
            },
            "deprecated": false
          },
          {
            "name": "=",
            "in": "query",
            "required": false,
            "description": "Get entries that matches exactly your input",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_ne",
            "in": "query",
            "required": false,
            "description": "Get records that are not equals to something",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lt",
            "in": "query",
            "required": false,
            "description": "Get record that are lower than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_lte",
            "in": "query",
            "required": false,
            "description": "Get records that are lower than or equal to a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gt",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_gte",
            "in": "query",
            "required": false,
            "description": "Get records that are greater than  or equal a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_contains",
            "in": "query",
            "required": false,
            "description": "Get records that contains a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_containss",
            "in": "query",
            "required": false,
            "description": "Get records that contains (case sensitive) a value",
            "schema": {
              "type": "string"
            },
            "deprecated": false
          },
          {
            "name": "_in",
            "in": "query",
            "required": false,
            "description": "Get records that matches any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          },
          {
            "name": "_nin",
            "in": "query",
            "required": false,
            "description": "Get records that doesn't match any value in the array of values",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": false
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "deprecated": false,
        "description": "Retrieve the logged in user information.",
        "operationId": "getMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Return logged in user",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": []
      }
    },
    "/users/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a single user depending by `Id`",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Return an user",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update an existing user",
        "operationId": "updateUser",
        "responses": {
          "200": {
            "description": "Update successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPermissionsUser"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Update an user",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields for user update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewUsersPermissionsUser"
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": false,
        "description": "Delete an existing user",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "User delete successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "example" : {
                  "code": 200,
                  "message": "User deleted successfully"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden**: this operation requeris authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 403,
                  "message":"Error - Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "**Not found**: the resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }, "example": {
                  "code": 404,
                  "message":"Error - Not found"
                }
              }
            }
          },
          "default": {
            "description": "**Unexpected error**",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "",
        "tags": [
          "UsersPermissions - User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "deprecated": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Company": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "b6825a95"
          },
          "Name": {
            "type": "string",
            "example": "Fianciera Espectacular"
          },
          "Slug": {
            "type": "string",
            "example": "financiera-espectacular"
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "example": "maia"
          },
          "updated_by": {
            "type": "string",
            "example":"jlopez"
          }
        }
      },
      "NewCompany": {
        "properties": {
          "Name": {
            "type": "string",
            "example": "Fianciera Espectacular"
          },
          "Slug": {
            "type": "string",
            "example": "financiera-espectacular"
          }
        }
      },
      "Customers": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "addressStreet": {
            "type": "string"
          },
          "addressNeighborhood": {
            "type": "string"
          },
          "addressCity": {
            "type": "string"
          },
          "addressState": {
            "type": "string"
          },
          "addressCountry": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "maritalStatus": {
            "type": "string",
            "enum": [
              "single",
              "married",
              "separated",
              "widowed"
            ]
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "NewCustomers": {
        "properties": {
          "uuid": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "addressStreet": {
            "type": "string"
          },
          "addressNeighborhood": {
            "type": "string"
          },
          "addressCity": {
            "type": "string"
          },
          "addressState": {
            "type": "string"
          },
          "addressCountry": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "maritalStatus": {
            "type": "string",
            "enum": [
              "single",
              "married",
              "separated",
              "widowed"
            ]
          }
        }
      },
      "Datasources": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "driver": {
            "type": "string",
            "enum": [
              "mysql",
              "mariadb",
              "sqlserver",
              "postgre",
              "excell",
              "csv",
              "rest",
              "mongo"
            ]
          },
          "host": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "database": {
            "type": "string"
          },
          "port": {
            "type": "string"
          },
          "ssl": {
            "type": "boolean"
          },
          "keyfile": {
            "type": "string"
          },
          "certificate": {
            "type": "string"
          },
          "sslCA": {
            "type": "string"
          },
          "ssh": {
            "type": "boolean"
          },
          "sshHost": {
            "type": "string"
          },
          "sshUsername": {
            "type": "string"
          },
          "sshPassword": {
            "type": "string"
          },
          "sshPort": {
            "type": "string"
          },
          "sshIdentity": {
            "type": "string"
          },
          "sshTunneling": {
            "type": "boolean"
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "NewDatasources": {
        "properties": {
          "driver": {
            "type": "string",
            "enum": [
              "mysql",
              "mariadb",
              "sqlserver",
              "postgre",
              "excell",
              "csv",
              "rest",
              "mongo"
            ]
          },
          "host": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "database": {
            "type": "string"
          },
          "port": {
            "type": "string"
          },
          "ssl": {
            "type": "boolean"
          },
          "keyfile": {
            "type": "string"
          },
          "certificate": {
            "type": "string"
          },
          "sslCA": {
            "type": "string"
          },
          "ssh": {
            "type": "boolean"
          },
          "sshHost": {
            "type": "string"
          },
          "sshUsername": {
            "type": "string"
          },
          "sshPassword": {
            "type": "string"
          },
          "sshPort": {
            "type": "string"
          },
          "sshIdentity": {
            "type": "string"
          },
          "sshTunneling": {
            "type": "boolean"
          }
        }
      },
      "Payments": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "amountDue": {
            "type": "number"
          },
          "amountPaid": {
            "type": "number"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "NewPayments": {
        "properties": {
          "amountDue": {
            "type": "number"
          },
          "amountPaid": {
            "type": "number"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Reports": {
        "required": [
          "id",
          "uuid"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "reference",
              "vector"
            ]
          },
          "processed": {
            "type": "boolean"
          },
          "users_permissions_user": {
            "required": [
              "id",
              "username",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "resetPasswordToken": {
                "type": "string"
              },
              "confirmationToken": {
                "type": "string"
              },
              "confirmed": {
                "type": "boolean"
              },
              "blocked": {
                "type": "boolean"
              },
              "role": {
                "type": "string"
              },
              "reports": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "created_by": {
                "type": "string"
              },
              "updated_by": {
                "type": "string"
              }
            }
          },
          "score": {
            "type": "number"
          },
          "scoreProbability": {
            "type": "number"
          },
          "scoreConfidence": {
            "type": "number"
          },
          "scoreVersion": {
            "type": "string"
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "NewReports": {
        "required": [
          "uuid"
        ],
        "properties": {
          "uuid": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "reference",
              "vector"
            ]
          },
          "processed": {
            "type": "boolean"
          },
          "users_permissions_user": {
            "type": "string"
          },
          "score": {
            "type": "number"
          },
          "scoreProbability": {
            "type": "number"
          },
          "scoreConfidence": {
            "type": "number"
          },
          "scoreVersion": {
            "type": "string"
          }
        }
      },
      "Trainings": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "accuracy": {
            "type": "number"
          },
          "precission": {
            "type": "number"
          },
          "mae": {
            "type": "number"
          },
          "rmse": {
            "type": "number"
          },
          "binaryPath": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "meta": {
            "type": "string"
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "NewTrainings": {
        "properties": {
          "uuid": {
            "type": "string"
          },
          "accuracy": {
            "type": "number"
          },
          "precission": {
            "type": "number"
          },
          "mae": {
            "type": "number"
          },
          "rmse": {
            "type": "number"
          },
          "binaryPath": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "meta": {
            "type": "string"
          }
        }
      },
      "UsersPermissionsRole": {
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "type",
                "controller",
                "action",
                "enabled"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "controller": {
                  "type": "string"
                },
                "action": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "policy": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "username",
                "email"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "resetPasswordToken": {
                  "type": "string"
                },
                "confirmationToken": {
                  "type": "string"
                },
                "confirmed": {
                  "type": "boolean"
                },
                "blocked": {
                  "type": "boolean"
                },
                "role": {
                  "type": "string"
                },
                "reports": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                }
              }
            }
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        }
      },
      "NewUsersPermissionsRole": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UsersPermissionsUser": {
        "required": [
          "id",
          "username",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "minLength": 6
          },
          "provider": {
            "type": "string"
          },
          "confirmed": {
            "type": "boolean",
            "default": false
          },
          "blocked": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "reports": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "uuid"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "d0fea516-9b58-4cf5-ab86-bb7e983e4b0c"
                },
                "uuid": {
                  "type": "string",
                  "example": "maia-8439cc39b63b"
                },
                "referenceId": {
                  "type": "string",
                  "example": "96234"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "reference",
                    "vector"
                  ],
                  "example": "reference"
                },
                "processed": {
                  "type": "boolean"
                },
                "users_permissions_user": {
                  "type": "string",
                  "example": "jlopez"
                },
                "score": {
                  "type": "number",
                  "example": 98
                },
                "scoreProbability": {
                  "type": "number",
                  "example": 96
                },
                "scoreConfidence": {
                  "type": "number",
                  "example": 99
                },
                "scoreVersion": {
                  "type": "string",
                  "example": "v-ab86"
                }
              }
            }
          },
          "created_by": {
            "type": "string",
            "example": "admin"
          },
          "updated_by": {
            "type": "string",
            "example": "admin"
          }
        },
      },
      "NewUsersPermissionsUser": {
        "required": [
          "username",
          "email"
        ],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3,
            "example": "jlopez"
          },
          "email": {
            "type": "string",
            "minLength": 6,
            "example": "test@mydomain.com"
          },
          "provider": {
            "type": "string",
            "example": "local"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6,
            "example": "********"
          },
          "resetPasswordToken": {
            "type": "string",
            "example": "26f425d6-9269-442b-89ed-e35ba63bf9c0"
          },
          "confirmationToken": {
            "type": "string",
            "example": "eddc394a-8664-406e-852f-7a35d84a7fb7"
          },
          "confirmed": {
            "type": "boolean",
            "default": false
          },
          "blocked": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "type": "string"
          },
          "reports": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "maia-c6cbaa76ba8f",
              "maia-3b5a054c593d",
              "maia-f95a8582aea5"
            ]
          }
        }
      },
      "Success": {
        "type": "object",
        "description": "Returns on successful operation that returns no data.",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "description": "HTTP code",
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "description": "'OK' or additional information",
            "type": "string"
          }
        },
        "example": {
          "code": 200,
          "message": "OK"
        }
      },
      "Error": {
        "type": "object",
        "description": "Returns on failed operation.",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "description": "HTTP error code",
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "description": "'Error' or additional information",
            "type": "string"
          }
        },
        "example": {
          "code": 500,
          "message": "Error - Server Error"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Company"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Datasources"
    },
    {
      "name": "Email - Email"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Trainings"
    },
    {
      "name": "Upload - File"
    },
    {
      "name": "UsersPermissions - Role"
    },
    {
      "name": "UsersPermissions - User"
    }
  ]
}
